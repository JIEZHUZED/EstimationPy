Frequenty Asked Questions
=========================

For any questions about **EstimationPy** please contact

 * Marco Bonvini MBonvini@lbl.gov

If you want to contribute to the package please create a separate branch with
your proposed feature and make a pull request. 


**How to run examples and generate plots with results if a X server is not available?**

If you're using EstimationPy in a Docker container and you don't have linked its
X server to the one of the host OS, you can use the following shorcut.
Open a terminal and type::

   python -c 'import matplotlib; \
   matplotlib.use("Agg");\
   from estimationpy.examples.stuck_valve import run_ukf_smooth_fdd; \
   run_ukf_smooth_fdd.main()'

The former set of instructions loads **matplotlib**, defines the operation
mode that allows to save images without an X server, loads one of the
examples provided by EstimationPy and runs it.

**How can I assign a default logger to EstimationPy?**

The modules, classes and functions contained in EstimationPy use the logging
module that comes with Python. EstimationPy produces log messages with different
priorities and severity, for either debugging or reporting errors.
One can specify the default logger by adding the following lines at the beginning
of the script using EstimationPy::

  import logging
  from estimationpy.fmu_utils import estimationpy_logging
  estimationpy_logging.configure_logger()

The function :func:`estimationpy.fmu_utils.estimationpy_logging.configure_logger` takes
parameters that can be used to configure the level of logging.
An example is::
  
  estimationpy_logging.configure_logger(log_level = logging.DEBUG, \
  log_level_console = logging.INFO, log_level_file = logging.DEBUG)

In this case all the log messages at DEBUG level that are generated by EstimationPy
will be saved in the log file, while the log messages at the INFO level will be displayed
at the console level.
