import numpy as np
import matplotlib.pyplot as plt
from   pylab import figure

def plotResults(time,stopTime,X,Y,U,Um,Pch,Z,Xhat,Yhat,P,CovZ,Xsmooth,Psmooth,Xaug,Paug):
	fig2 = plt.figure()
	ax2  = fig2.add_subplot(211)
	ax2.plot(time,X[:,0],'b',label='$T_{ch OUT}$')
	ax2.plot(time,U[:,0],'b--',label='$T_{ch IN}$')
	ax2.plot(time,Um[:,0],'b.',label='$T_{ch M}$', alpha=0.2)
	ax2.plot(time,X[:,1],'r',label='$T_{cw OUT}$')
	ax2.plot(time,U[:,1],'r--',label='$T_{cw IN}$')
	ax2.plot(time,Um[:,1],'r.',label='$T_{ch M}$', alpha=0.2)
	ax2.set_xlabel('time [s]')
	ax2.set_ylabel('Temperatures')
	ax2.set_xlim([0, stopTime])
	ax2.legend()
	ax2.grid(True)

	ax2  = fig2.add_subplot(212)
	ax2.plot(time,U[:,2],'g',label='$W compressor$')
	ax2.plot(time,Um[:,2],'g.',label='$W compressor$',alpha=0.2)
	ax2.plot(time,Pch[:,0],'k',label='$Pch compressor$',alpha=0.5)
	ax2.set_xlabel('time [s]')
	ax2.set_ylabel('Power')
	ax2.set_xlim([0, stopTime])
	ax2.legend()
	ax2.grid(True)

	# presentation of the results
	fig = plt.figure()
	ax  = fig.add_subplot(311)
	ax.plot(time,X[:,0],'b',label='$T_{ch}$')
	ax.plot(time,Xhat[:,0],'r',label='$T_{ch UKF}$')
	ax.fill_between(time, Xhat[:,0]-np.sqrt(P[:,0,0]), Xhat[:,0] +np.sqrt(P[:,0,0]), facecolor='red', interpolate=True, alpha=0.3)
	ax.plot(time,Xsmooth[:,0],'g',label='$T_{ch SMOOTH}$')
	ax.fill_between(time, Xsmooth[:,0]-np.sqrt(Psmooth[:,0,0]), Xsmooth[:,0] +np.sqrt(Psmooth[:,0,0]), facecolor='green', interpolate=True, alpha=0.3)
	ax.plot(time,Xaug[:,0],'k',label='$T_{ch AUG}$')
	ax.fill_between(time, Xaug[:,0]-np.sqrt(Paug[:,0,0]), Xaug[:,0] +np.sqrt(Paug[:,0,0]), facecolor='black', interpolate=True, alpha=0.3)
	ax.set_xlabel('time [s]')
	ax.set_ylabel('T chiller')
	ax.set_xlim([0, stopTime])
	ax.legend()
	ax.grid(True)

	ax  = fig.add_subplot(312)
	ax.plot(time,X[:,1],'b',label='$T_{cw}$')
	ax.plot(time,Xhat[:,1],'r',label='$T_{cw UKF}$')
	ax.fill_between(time, Xhat[:,1]-np.sqrt(P[:,1,1]), Xhat[:,1] +np.sqrt(P[:,1,1]), facecolor='red', interpolate=True, alpha=0.5)
	ax.plot(time,Xsmooth[:,1],'g',label='$T_{cw SMOOTH}$')
	ax.fill_between(time, Xsmooth[:,1]-np.sqrt(Psmooth[:,1,1]), Xsmooth[:,1] +np.sqrt(Psmooth[:,1,1]), facecolor='green', interpolate=True, alpha=0.3)
	ax.plot(time,Xaug[:,1],'k',label='$T_{cw AUG}$')
	ax.fill_between(time, Xaug[:,1]-np.sqrt(Paug[:,1,1]), Xaug[:,1] +np.sqrt(Paug[:,1,1]), facecolor='black', interpolate=True, alpha=0.3)
	ax.set_xlabel('time [s]')
	ax.set_ylabel('T condenser')
	ax.set_xlim([0, stopTime])
	ax.legend()
	ax.grid(True)

	ax  = fig.add_subplot(313)
	ax.plot(time,X[:,2],'b',label='$COP$')
	ax.plot(time,Xhat[:,2],'r',label='$COP_{UKF}$')
	ax.fill_between(time, Xhat[:,2]-np.sqrt(P[:,2,2]), Xhat[:,2] +np.sqrt(P[:,2,2]), facecolor='red', interpolate=True, alpha=0.5)
	ax.plot(time,Xsmooth[:,2],'g',label='$COP_{SMOOTH}$')
	ax.fill_between(time, Xsmooth[:,2]-np.sqrt(Psmooth[:,2,2]), Xsmooth[:,2] +np.sqrt(Psmooth[:,2,2]), facecolor='green', interpolate=True, alpha=0.3)
	ax.plot(time,Xaug[:,2],'k',label='$COP_{AUG}$')
	ax.fill_between(time, Xaug[:,2]-np.sqrt(Paug[:,2,2]), Xaug[:,2] +np.sqrt(Paug[:,2,2]), facecolor='black', interpolate=True, alpha=0.3)
	ax.set_xlabel('time [s]')
	ax.set_ylabel('COP')
	ax.set_xlim([0, stopTime])
	ax.legend()
	ax.grid(True)
	
	fig3 = plt.figure()
	ax3  = fig3.add_subplot(111)
	ax3.plot(time, np.sqrt(P[:,0,0]),'b',label='$\sigma_{T_{ch}}$')
	ax3.plot(time, np.sqrt(Paug[:,0,0]),'b--',label='$\sigma_{T_{ch}} AUG$')
	ax3.plot(time, np.sqrt(P[:,1,1]),'r',label='$\sigma_{T_{cw}}$')
	ax3.plot(time, np.sqrt(Paug[:,1,1]),'r--',label='$\sigma_{T_{cw}} AUG$')
	ax3.plot(time, np.sqrt(P[:,2,2]),'k',label='$\sigma_{COP}$')
	ax3.plot(time, np.sqrt(Paug[:,2,2]),'k--',label='$\sigma_{COP} AUG$')
	ax3.set_xlabel('time [s]')
	ax3.set_ylabel('Covariance')
	ax3.set_xlim([0, stopTime])
	ax3.legend()
	ax3.grid(True)

	plt.show()
